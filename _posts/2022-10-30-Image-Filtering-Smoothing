Smoothing, also called blurring, is an image-processing operation that is frequently used to reduce noise, among other purposes. A smoothing operation is performed by 
applying linear filters to the image. Then, the pixel values of the output at positions (xi,yj) are computed as a weighted sum of the input pixel values 
at positions (xi,yj) and their neighborhoods. The weights for the pixels in the linear operation are usually stored in a matrix called kernel. 
Therefore, a filter could be represented as a sliding window of coefficients.

Let K be the kernel and I and O the input and output images, respectively. Then, each output pixel value at (i,j) is calculated as follows:
O(i,j)= SUM [I(i+m,j+n)*k(m,n)]


Most Used Smoothing Filters:

1- Median:
Median filtering is very good to get rid of salt-and-pepper or speckle noise.
void medianBlur(InputArray src, OutputArray dst, int ksize): 
This runs through each element of the image and replaces each pixel with the median of its neighboring pixels.

2- Gaussian: 
Gaussian is a much better preprocessing step for edge detection. void GaussianBlur(InputArray src, OutputArray dst, Size ksize, double sigmaX, double sigmaY = 0, int borderType=BORDER_DEFAULT):
This is done by convolving each point in the src input array with a Gaussian kernel to produce the dst output. The sigmaX and sigmaY parameters indicate
the Gaussian kernel standard deviation in X and Y directions. If sigmaY is zero, it is set to be equal to sigmaX, and if both are equal to zero, they are computed using the width and height given in ksize.
Larger sigma values may remove more noise, but they will also remove detail from an image.

3-boxFilter: 
void boxFilter(InputArray src, OutputArray dst, int ddepth, Size ksize, Point anchor = Point(-1,-1), bool normalize = true, int borderType = BORDER_DEFAULT): 
This is a box filter whose kernel coefficients are equal. With normalize=true, each output pixel value is the mean of its kernel neighbors with all coefficients equal to 1/n,
where n = the number of elements. With normalize=false, all coefficients are equal to 1. 
The src argument is the input image, while the filtered image is stored in dst. The ddepth parameter indicates the output image depth that is -1 to use the same depth as the input image.
The kernel size is indicated in ksize. The anchor point indicates the position of the so-called anchor pixel. The (-1, -1) default value means that the anchor is at the center of the kernel.



Refernces:
-Learning Image Processing with OpenCv (Published by Packt Publishing Ltd.)
-https://datacarpentry.org/image-processing/06-blurring/
